#
# --------------------------------
# CheatSheet
# --------------------------------
# 系统指令：
# 前缀	指令	描述
# Ctrl+b	?	显示快捷键帮助文档
# Ctrl+b	d	断开当前会话
# Ctrl+b	D	选择要断开的会话
# Ctrl+b	Ctrl+z	挂起当前会话
# Ctrl+b	r	强制重载当前会话
# Ctrl+b	s	显示会话列表用于选择并切换
# Ctrl+b	:	进入命令行模式，此时可直接输入ls等命令
# Ctrl+b	[	进入复制模式，按q退出
# Ctrl+b	]	粘贴复制模式中复制的文本
# Ctrl+b	~	列出提示信息缓存
#
# 窗口（window）指令：
# 前缀	指令	描述
# Ctrl+b	c	新建窗口
# Ctrl+b	&	关闭当前窗口
# Ctrl+b	0~9	切换到指定窗口
# Ctrl+b	p	切换到上一窗口
# Ctrl+b	n	切换到下一窗口
# Ctrl+b	w	打开窗口列表，用于且切换窗口
# Ctrl+b	,	重命名当前窗口
# Ctrl+b	.	修改当前窗口编号（适用于窗口重新排序）
# Ctrl+b	f	快速定位到窗口（输入关键字匹配窗口名称）
# 面板（pane）指令：#
# 前缀	指令	描述
# Ctrl+b	"	当前面板上下一分为二，下侧新建面板
# Ctrl+b	%	当前面板左右一分为二，右侧新建面板
# Ctrl+b	x	关闭当前面板（关闭前需输入y or n确认）
# Ctrl+b	z	最大化当前面板，再重复一次按键后恢复正常（v1.8版本新增）
# Ctrl+b	!	将当前面板移动到新的窗口打开（原窗口中存在两个及以上面板有效）
# Ctrl+b	;	切换到最后一次使用的面板
# Ctrl+b	q	显示面板编号，在编号消失前输入对应的数字可切换到相应的面板
# Ctrl+b	{	向前置换当前面板
# Ctrl+b	}	向后置换当前面板
# Ctrl+b	Ctrl+o	顺时针旋转当前窗口中的所有面板
# Ctrl+b	方向键	移动光标切换面板
# Ctrl+b	o	选择下一面板
# Ctrl+b	空格键	在自带的面板布局中循环切换
# Ctrl+b	Alt+方向键	以5个单元格为单位调整当前面板边缘
# Ctrl+b	Ctrl+方向键	以1个单元格为单位调整当前面板边缘（Mac下
# Ctrl+b	t	显示时钟


# --------------------------------
# Mouse support
# --------------------------------
    set-option -g mouse on
    # bind C-M-m setw -g mouse off \; display "Mouse OFF!"
    # bind C-M-M setw -g mouse on \; display "Mouse ON!"

    setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
    # bind -n vi-copy v begin-selection # 绑定v键为开始选择文本
    # bind -n vi-copy y copy-selection # 绑定y键为复制选中文本
    bind-key -T copy-mode-vi 'v' send -X begin-selection
    bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
    # bind-key -t vi-copy 'v' begin-selection
    # bind-key -t vi-copy 'y' copy-selection


# --------------------------------
# Setting Zone
# --------------------------------
    set -g base-index 1 # 设置窗口的起始下标为1
    set -g pane-base-index 1 # 设置面板的起始下标为1

    # Ture Color support
    set -g default-terminal "xterm-256color"
    set -ga terminal-overrides ",xterm*:Tc"

# --------------------------------
# Fast window navigation
# --------------------------------
    bind -n C-M-h select-pane -L
    bind -n C-M-j select-pane -D
    bind -n C-M-k select-pane -U
    bind -n C-M-l select-pane -R

    bind -n C-M-e next-window
    bind -n C-M-w new-window
    bind -n C-M-q previous-window
    
    bind -n C-M-c splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录
    bind -n C-M-x confirm-before -p "kill-pane #P? (y/n)" kill-pane
    bind -n C-M-v copy-mode

    bind-key -Tcopy-mode-vi 'v' send -X begin-selection
    bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel

# --------------------------------
# vim-tmux-navigator
# --------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
    is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
    bind-key -n 'M-H' if-shell "$is_vim" 'send-keys M-H'  'select-pane -L'
    bind-key -n 'M-J' if-shell "$is_vim" 'send-keys M-J'  'select-pane -D'
    bind-key -n 'M-K' if-shell "$is_vim" 'send-keys M-K'  'select-pane -U'
    bind-key -n 'M-L' if-shell "$is_vim" 'send-keys M-L'  'select-pane -R'

    bind-key -n 'M-X' if-shell "$is_vim" 'send-keys M-X'  'confirm-before -p "kill-pane #P? (y/n)" kill-pane'
    bind-key -n 'M-C' if-shell "$is_vim" 'send-keys M-N'  'split-window -h'

    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
        "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
    if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
        "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"






# --------------------------------
# Statue Line Theme
# --------------------------------
# This tmux statusbar config was created by tmuxline.vim
# on Thu, 15 Jun 2023
    set -g status-justify "left"
    set -g status "on"
    set -g status-left-style "none"
    set -g message-command-style "fg=#3fc5b7,bg=#3b3b3b"
    set -g status-right-style "none"
    set -g pane-active-border-style "fg=#368aeb"
    set -g status-style "none,bg=#252525"
    set -g message-style "fg=#3fc5b7,bg=#3b3b3b"
    set -g pane-border-style "fg=#3b3b3b"
    set -g status-right-length "100"
    set -g status-left-length "100"
    setw -g window-status-activity-style "none"
    setw -g window-status-separator ""
    setw -g window-status-style "none,fg=#777777,bg=#252525"
    set -g status-left "#[fg=#252525,bg=#368aeb] #S #[fg=#368aeb,bg=#252525,nobold,nounderscore,noitalics]"
    set -g status-right "#[fg=#3b3b3b,bg=#252525,nobold,nounderscore,noitalics]#[fg=#3fc5b7,bg=#3b3b3b] %Y-%m-%d | %H:%M #[fg=#368aeb,bg=#3b3b3b,nobold,nounderscore,noitalics]#[fg=#252525,bg=#368aeb] #h "
    setw -g window-status-format "#[fg=#777777,bg=#252525] #I |#[fg=#777777,bg=#252525] #W "
    setw -g window-status-current-format "#[fg=#252525,bg=#3b3b3b,nobold,nounderscore,noitalics]#[fg=#3fc5b7,bg=#3b3b3b] #I |#[fg=#3fc5b7,bg=#3b3b3b] #W #[fg=#3b3b3b,bg=#252525,nobold,nounderscore,noitalics]"

# --------------------------------
# Statue Line Theme
# --------------------------------



# run '~/.config/tmux/plugins/tpm/tpm'
#

