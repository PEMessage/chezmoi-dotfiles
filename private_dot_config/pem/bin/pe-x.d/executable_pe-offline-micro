#! /usr/bin/bash

#  -c  ：创建打包文件，可搭配 -v 来察看过程中被打包的文件名（filename）
#  -t  ：察看打包文件的内容含有哪些文件名，重点在察看“文件名”就是了；
#  -x  ：解打包或解压缩的功能，可以搭配 -C （大写） 在特定目录解开
#        特别留意的是， -c, -t, -x 不可同时出现在一串命令行中。
#  -z  ：通过 gzip  的支持进行压缩/解压缩：此时文件名最好为 *.tar.gz
#  -j  ：通过 bzip2 的支持进行压缩/解压缩：此时文件名最好为 *.tar.bz2
#  -J  ：通过 xz    的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz
#        特别留意， -z, -j, -J 不可以同时出现在一串命令行中
#  -v  ：在压缩/解压缩的过程中，将正在处理的文件名显示出来！
#  -f filename：-f 后面要立刻接要被处理的文件名！建议 -f 单独写一个选项啰！（比较不会忘记）
#  -C 目录    ：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。
#  
#  其他后续练习会使用到的选项介绍：
#  -p（小写） ：保留备份数据的原本权限与属性，常用于备份（-c）重要的配置文件
#  -P（大写） ：保留绝对路径，亦即允许备份数据中含有根目录存在之意；
#  --exclude=FILE：在压缩的过程中，不要将 FILE 打包！

TAR_NAME=offline-micro.tar.gz
cd ~
mkdir -p build
cp ~/.vimrc ./.config/pem/config/vim/init-pe.vim
tar pcfz ./build/$TAR_NAME \
    ./.config/pem \
    ./.config/tmux \
    ./.config/vim \
    ./.local/pem 
echo -e '\e[092m INFO: \e[0m done'
echo -e '\e[092m INFO: \e[0m use "tar pzxvf ./build/offline-micro.tar.gz -C ~"'
